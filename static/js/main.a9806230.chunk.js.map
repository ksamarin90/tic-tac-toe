{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helpers.js","App.js","index.js"],"names":["style","border","cursor","outline","Square","value","onClick","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","index","key","Game","useState","Array","fill","src","alt","board","setBoard","xIsNext","setXisNext","isStarted","setIsStarted","isEndOfGame","setIsEndOfGame","winner","lines","i","length","a","b","c","props","calculateWinner","useEffect","every","boardCopy","className","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"0KAEMA,EAAQ,CACVC,OAAQ,qBACRC,OAAQ,UACRC,QAAS,QAUEC,EANA,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAAT,OACX,4BAAQN,MAAOA,EAAOM,QAASA,GAC1BD,ICRHL,EAAQ,CACVC,OAAQ,qBACRM,aAAc,MACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAWHC,EARD,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASR,EAAX,EAAWA,QAAX,OACV,yBAAKN,MAAOA,GACPc,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACT,kBAAC,EAAD,CAAQC,IAAKD,EAAOZ,MAAOW,EAAQV,QAAS,kBAAMA,EAAQW,WCZtE,IAwDeE,EArDF,WAAO,IAAD,EACWC,mBAASC,MAAM,GAAGC,KAAK,yBAAKC,IAAI,GAAGC,IAAI,OADlD,mBACRC,EADQ,KACDC,EADC,OAEeN,oBAAS,GAFxB,mBAERO,EAFQ,KAECC,EAFD,OAGmBR,oBAAS,GAH5B,mBAGRS,EAHQ,KAGGC,EAHH,OAIuBV,oBAAS,GAJhC,mBAIRW,EAJQ,KAIKC,EAJL,KAMTC,ECbH,SAAyBnB,GAW5B,IAVA,IAAMoB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIzB,EAAQuB,GAAGG,MAAMhB,KAAOV,EAAQuB,GAAGG,MAAMhB,MAAQV,EAAQwB,GAAGE,MAAMhB,KAAOV,EAAQuB,GAAGG,MAAMhB,MAAQV,EAAQyB,GAAGC,MAAMhB,IACrH,OAAOV,EAAQuB,GAAGG,MAAMhB,IAG5B,OAAO,KDJQiB,CAAgBhB,GAkC/B,OANAiB,qBAAU,YACFT,GAAUR,EAAMkB,OAAM,SAAA3B,GAAM,OAAIA,EAAOwB,MAAMhB,IAAIY,OAAS,QAN9DN,GAAa,GACbF,GAAW,GACXI,GAAe,OAUf,oCACKD,EAAcE,EAAS,gDAAsBA,EAAtB,UAA2C,uDAElEJ,EAAkDF,EAAU,0CAAsB,0CAAtE,yDACb,kBAAC,EAAD,CAAOb,QAASW,EAAOnB,QArCX,SAACW,GACjB,IAAM2B,EAAS,YAAOnB,GAElBQ,GAAUW,EAAUD,OAAM,SAAA3B,GAAM,OAAIA,EAAOwB,MAAMhB,IAAIY,OAAS,MAEvDQ,EAAU3B,GAAOuB,MAAMhB,IAAIY,OAAS,IAAMP,IAGjDe,EAAU3B,GAASU,EAAU,yBAAKJ,IAnBhC,mBAmB4CC,IAAI,MAAQ,yBAAKD,IAlB9D,oBAkByEC,IAAI,MAC9EE,EAASkB,GACThB,GAAYD,OA4BZ,4BAAQkB,UAAU,aAAaC,SAAUjB,EAAWvB,QAxB1C,WACdwB,GAAa,GACbE,GAAe,GACfN,EAASL,MAAM,GAAGC,KAAK,yBAAKC,IAAI,GAAGC,IAAI,SAsB/BK,EAAY,UAAY,gBE3CzBkB,MARf,WACE,OACE,oCACE,kBAAC,EAAD,QCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.a9806230.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst style = {\r\n    border: \"2px solid darkblue\",\r\n    cursor: 'pointer',\r\n    outline: 'none'\r\n}\r\n\r\n\r\nconst Square = ({value, onClick}) => (\r\n    <button style={style} onClick={onClick}>\r\n        {value}\r\n    </button>\r\n)\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from \"./Square\"\r\n\r\nconst style = {\r\n    border: '2px solid darkblue',\r\n    borderRadius: '5px',\r\n    width: '250px',\r\n    height: '250px',\r\n    margin: '0 auto',\r\n    display: 'grid',\r\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)'\r\n}\r\n\r\nconst Board = ({squares, onClick}) => (\r\n    <div style={style}>\r\n        {squares.map((square, index) => (\r\n            <Square key={index} value={square} onClick={() => onClick(index)} />\r\n    ))}\r\n    </div>\r\n)\r\n\r\nexport default Board;\r\n","import React, {useState, useEffect} from 'react';\r\nimport Board from \"./Board\"\r\nimport { calculateWinner } from '../helpers'\r\n\r\nconst cross = 'images/close.png';\r\nconst zero = 'images/circle.png';\r\n\r\nconst Game = () => {\r\n    const [board, setBoard] = useState(Array(9).fill(<img src='' alt=''/>))\r\n    const [xIsNext, setXisNext] = useState(true)\r\n    const [isStarted, setIsStarted] = useState(false)\r\n    const [isEndOfGame, setIsEndOfGame] = useState(false)\r\n    \r\n    const winner = calculateWinner(board);\r\n\r\n    const handleClick = (index) => {\r\n        const boardCopy = [...board];\r\n\r\n        if (winner || boardCopy.every(square => square.props.alt.length > 0)) {\r\n            return;\r\n        } else if (boardCopy[index].props.alt.length > 0 || !isStarted) {\r\n            return;\r\n        } else {\r\n            boardCopy[index] = xIsNext ? <img src={cross} alt=\"X\"/> : <img src={zero} alt=\"O\"/>;\r\n            setBoard(boardCopy);\r\n            setXisNext(!xIsNext);\r\n        }\r\n    }\r\n\r\n    const startGame = () => {\r\n        setIsStarted(true);\r\n        setIsEndOfGame(false);\r\n        setBoard(Array(9).fill(<img src='' alt=''/>));\r\n    }\r\n    \r\n    const endGame = () => {\r\n        setIsStarted(false);\r\n        setXisNext(true);\r\n        setIsEndOfGame(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (winner || board.every(square => square.props.alt.length > 0)) {\r\n            endGame()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {isEndOfGame ? winner ? <h1>Congratulations, {winner} won! </h1> : <h1>It's a draw, try again!</h1>\r\n            : \r\n            !isStarted ? <h1>Let's play a Tic Tac Toe!</h1> : (xIsNext ? <h1>X is next.</h1> : <h1>O is next.</h1>)}\r\n            <Board squares={board} onClick={handleClick} />\r\n            <button className=\"start-game\" disabled={isStarted} onClick={startGame}>\r\n               {isStarted ? 'Playing' : 'Start Game'}\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game;","export function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a].props.alt && squares[a].props.alt === squares[b].props.alt && squares[a].props.alt === squares[c].props.alt) {\r\n        return squares[a].props.alt;\r\n      } \r\n    }\r\n    return null;\r\n  }","import React from 'react';\nimport Game from \"./components/Game\";\n\nfunction App() {\n  return (\n    <>\n      <Game />\n    </>\n  )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}